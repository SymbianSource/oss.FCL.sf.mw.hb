#
#############################################################################
##
## Copyright (C) 2008-2010 Nokia Corporation and/or its subsidiary(-ies).
## All rights reserved.
## Contact: Nokia Corporation (developer.feedback@nokia.com)
##
## This file is part of the UI Extensions for Mobile.
##
## GNU Lesser General Public License Usage
## This file may be used under the terms of the GNU Lesser General Public
## License version 2.1 as published by the Free Software Foundation and
## appearing in the file LICENSE.LGPL included in the packaging of this file.
## Please review the following information to ensure the GNU Lesser General
## Public License version 2.1 requirements will be met:
## http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
##
## In addition, as a special exception, Nokia gives you certain additional
## rights.  These rights are described in the Nokia Qt LGPL Exception
## version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
##
## If you have questions regarding the use of this file, please contact
## Nokia at developer.feedback@nokia.com.
##
#############################################################################

# default collections
isEmpty(HB):HB = hbcore hbwidgets hbutils # hbinput hbfeedback
QT *= core gui svg network
symbian:CONFIG += symbian_i18n skin_icon

include(hb_install.prf)

CONFIG(debug, debug|release) {
    win32:SUFFIX = d
    mac:SUFFIX = _debug
}

unset(LINKAGE)
COLLECTIONS = $$lower($$unique(HB))

# hbtools is deprecated
contains(COLLECTIONS, hbtools) {
    warning(HbTools collection has been renamed HbUtils.)
    warning(Replace DEPRECATED \'hbtools\' with \'hbutils\' in the HB variable.)
    COLLECTIONS -= hbtools
    COLLECTIONS *= hbutils
}

# resolve dependencies
contains(COLLECTIONS, hbwidgets):COLLECTIONS *= hbcore
contains(COLLECTIONS, hbutils):COLLECTIONS *= hbcore hbwidgets
contains(COLLECTIONS, hbinput):COLLECTIONS *= hbcore hbwidgets hbutils
contains(COLLECTIONS, hbfeedback):COLLECTIONS *= hbcore hbwidgets hbutils

for(COLLECTION, $$list($$COLLECTIONS)) {
    isEqual(COLLECTION, hbcore) {
        LINKAGE += -lHbCore$${SUFFIX}
    } else:isEqual(COLLECTION, hbwidgets) {
        LINKAGE += -lHbWidgets$${SUFFIX}
    } else:isEqual(COLLECTION, hbutils) {
        LINKAGE += -lHbUtils$${SUFFIX}
    } else:isEqual(COLLECTION, hbinput) {
        LINKAGE += -lHbInput$${SUFFIX}
    } else:isEqual(COLLECTION, hbfeedback) {
        LINKAGE += -lHbFeedback$${SUFFIX}
    } else {
        message(Unknown COLLECTION: $$COLLECTION)
        next()
    }
    INCLUDEPATH += $${HB_INCLUDE_DIR}/$${COLLECTION}
}

!isEmpty(LINKAGE) {
    LIBS += -L$${HB_LIB_DIR} $${LINKAGE}
    QMAKE_RPATHDIR *= $${HB_LIB_DIR}
}
